# This workflow builds Python packages for multiple platforms and publishes to PyPI

name: Build and Upload Python Package

on:
  release:
    types: [published]
  workflow_dispatch:  # 允许手动触发工作流

permissions:
  contents: read

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build sdist
        run: python -m build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          # 指定要构建的Python版本
          CIBW_BUILD: "cp37-* cp38-* cp39-* cp310-* cp311-* cp312-*"
          # 跳过不需要的平台
          CIBW_SKIP: "*-musllinux_* pp* *_i686 *_ppc64le *_s390x"
          # 要安装的依赖项
          CIBW_BEFORE_BUILD: "pip install scikit-build-core pybind11"
          # Linux使用manylinux镜像
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          # 为Mac OS X设置最低部署目标
          CIBW_ENVIRONMENT_MACOS: "MACOSX_DEPLOYMENT_TARGET=10.14"
          # 构建后测试wheel是否可安装
          CIBW_TEST_COMMAND: "python -c \"import bungee_python; print(bungee_python.__version__)\""

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  publish:
    name: Publish to PyPI
    needs: [build_sdist, build_wheels]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/bungee-python
    permissions:
      id-token: write  # 用于可信发布
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/